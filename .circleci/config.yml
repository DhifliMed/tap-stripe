version: 2.1
orbs:
  slack: circleci/slack@3.4.2

executors:
  tap_tester:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:stitch-tap-tester
jobs:
  build:
    executor: tap_tester
    steps:
      - checkout
      - run:
          name: 'Setup virtual env'
          command: |
            python3 -mvenv /usr/local/share/virtualenvs/tap-stripe
            source /usr/local/share/virtualenvs/tap-stripe/bin/activate
            pip install -U pip setuptools
            pip install .[test]
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox /usr/local/share/virtualenvs/dev_env.sh
      - persist_to_workspace:
          root: /usr/local/share/virtualenvs/
          paths:
            - tap-stripe
            - dev_env.sh
  pylint:
    executor: tap_tester
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'pylint'
          command: |
            source /usr/local/share/virtualenvs/tap-stripe/bin/activate
            source /usr/local/share/virtualenvs/dev_env.sh
            echo "Will ignore the following errors $PYLINT_DISABLE_LIST"
            pylint tap_stripe -d "$PYLINT_DISABLE_LIST"
  json_validate:
    executor: tap_tester
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'JSON Validator'
          command: |
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            stitch-validate-json tap_stripe/schemas/*.json
            stitch-validate-json tap_stripe/schemas/shared/*.json
  unittest:
    executor: tap_tester
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'JSON Validator'
          command: |
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            stitch-validate-json tap_stripe/schemas/*.json
            stitch-validate-json tap_stripe/schemas/shared/*.json
      - run:
          name: 'Unit Tests'
          command: |
            source /usr/local/share/virtualenvs/tap-stripe/bin/activate
            nosetests tests/unittests

  run_integration_test:
    parameters:
      test_command:
        type: string
    executor: tap_tester
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - add_ssh_keys
      - run:
          name: 'Integration Test'
          no_output_timeout: 30m
          command: |
            source /usr/local/share/virtualenvs/tap-stripe/bin/activate
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            source /usr/local/share/virtualenvs/dev_env.sh
            pip install 'stripe==2.42.0'
            << parameters.test_command >>
      - slack/notify-on-failure:
          only_for_branches: master

workflows:
  version: 2
  commit: &commit_jobs
    jobs:
      - build:
          context: circleci-user
      - pylint:
          context: circleci-user
          requires:
            - build
      - json_validate:
          context: circleci-user
          requires:
            - build
      - unittest:
          context: circleci-user
          requires:
            - build
      - run_integration_test:
          name: "Discovery Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_discovery.py
          requires:
            - "All Fields Integration Test"
      - run_integration_test:
          name: "Check All Integration Tests Running"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_all_tests_run.py
          requires:
            - "All Fields Integration Test"
      - run_integration_test:
          name: "Start Date Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_start_date.py
          requires:
            - "All Fields Integration Test"
      - run_integration_test:
          name: "Automatic Fields Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_automatic_fields.py
          requires:
            - "All Fields Integration Test"
      - run_integration_test:
          name: "Pagination Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_pagination.py
          requires:
            - "All Fields Integration Test"
      - run_integration_test:
          name: "Create Object Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_create_object.py
          requires:
            - "All Fields Integration Test"
      - run_integration_test:
          name: "Event Updates Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_event_updates.py
          requires:
            - "Create Object Integration Test"
      - run_integration_test:
          name: "Full Table Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_full_replication.py
          requires:
            - "Event Updates Integration Test"
      - run_integration_test:
          name: "Incremental Integration Test"
          context:
            - circleci-user
          test_command: |-
            run-test --tap=${CIRCLE_PROJECT_REPONAME} tests/test_bookmarks.py
          requires:
            - "Full Table Integration Test"
build_daily:
    <<: *commit_jobs
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - master
